#!/usr/bin/env python
# encoding: utf-8

import argparse as ag

from os.path import abspath, dirname, exists, join
from yaml import load, dump
from kmsi import hid as h


PREFIX = dirname(__file__)
ACTUAL_FILE = abspath(
    join(
        PREFIX, "../share/kmsi/actual.yml"
    )
)
CFG_FILE = abspath(
    join(
        PREFIX, "../share/kmsi/config.yaml"
    )
)


def parse_args(default):
    parser = ag.ArgumentParser(
        formatter_class=ag.ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument(
        "--vendor-id",
        type=int,
        help="Vendor id.",
        default=default["vendor"]
    )
    parser.add_argument(
        "--product-id",
        type=int,
        help="Product id",
        default=default["product"]
    )
    parser.add_argument(
        "--color",
        type=str,
        help="Color to use.",
        default=default["layout"]["left"]["color"]
    )
    parser.add_argument(
        "--region",
        type=str,
        help="Region to set.",
        default="left"
    )
    parser.add_argument(
        "--level",
        type=str,
        help="Intensity level.",
        default=default["layout"]["left"]["level"]
    )
    parser.add_argument(
        "--mode",
        type=str,
        help="Working mode for the keyboard.",
        default=default["layout"]["mode"]
    )

    return parser.parse_args()

def main(args, default):
    config = default["layout"]

    if exists(ACTUAL_FILE):
        with open(ACTUAL_FILE, "r") as f:
            config.update(
                load(f)
            )

    config[args.region]["color"] = args.color
    config[args.region]["level"] = args.level
    config["mode"] = args.mode

    dev = h.Device(
        args.vendor_id,
        args.product_id,
        config=config
    )

    dev.update()

    with open(ACTUAL_FILE, "w") as f:
        dump(config, f)


if __name__ == '__main__':
    with open(CFG_FILE, "r") as f:
        default = load(f)

    args = parse_args(default)
    main(args, default)
